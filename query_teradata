--QUERY APROBACION MPOS

--****************************************************
-- CREO TABLAS TEMPORALES PARA ACELERAR EL PROCESO
--****************************************************
CREATE MULTISET VOLATILE TABLE VLT_reintentos_multi_pm, NO Log, NO FALLBACK AS ( 
SELECT a.pay_payment_id,
       b.multi_pm_type_pay_try_last
FROM SCORING.scoring_origin_report_all a
JOIN scoring.reintentos_multi_pm b
  ON a.pay_payment_id = b.pay_payment_id
WHERE Coalesce(Upper(StrTok(a.pay_tracking_id, ':,' ,2)),'N/A') IN ('MPOS')
AND a.pay_created_dt >=(Add_Months((Current_Date - Extract(DAY From Current_Date)+1),-7))
--and site_id in ('MLB')
) WITH DATA UNIQUE PRIMARY INDEX(pay_payment_id) ON COMMIT PRESERVE ROWS;

CREATE MULTISET VOLATILE TABLE DIARIO_SOR, NO Log, NO FALLBACK AS ( 
SELECT a.pay_payment_id,
  
       (CASE WHEN b.multi_pm_type_pay_try_last IS NOT NULL THEN b.multi_pm_type_pay_try_last ELSE a.pay_try_last END) AS pay_try_last,
       a.PAY_PM_DESC,
       a.pay_pm_type_id,
	   a.industry_id
FROM SCORING.scoring_origin_report_all a
--LEFT JOIN scoring.reintentos_multi_pm b
LEFT JOIN VLT_reintentos_multi_pm b
ON a.pay_payment_id = b.pay_payment_id
WHERE Coalesce(Upper(StrTok(a.pay_tracking_id, ':,' ,2)),'N/A') IN ('MPOS')
AND a.pay_created_dt >=(Add_Months((Current_Date - Extract(DAY From Current_Date)+1),-7))
--and site_id in ('MLB')
) WITH DATA PRIMARY INDEX(pay_payment_id) ON COMMIT PRESERVE ROWS;

COLLECT STATISTICS COLUMN (pay_payment_id) ON DIARIO_SOR;

----para cargar nuevos seller:
---volatil con los ultimos 15/30 dÃ­as (volatil_seller)

CREATE MULTISET VOLATILE TABLE seller_point_ultimos_30_dias, NO Log AS (
SELECT DISTINCT cus_cust_id_sel,
                Min(pay_created_dt) AS first_payment_date_seller 
            FROM WHOWNER.BT_MP_PAY_PAYMENTS
            WHERE 1=1
            AND Coalesce(Upper(StrTok(pay_tracking_id, ':,' ,2)),'N/A') IN ('MPOS')
            AND pay_created_dt>= (Current_Date-30)
            GROUP BY 1
) WITH DATA PRIMARY INDEX(cus_cust_id_sel) ON COMMIT PRESERVE ROWS;

CREATE MULTISET VOLATILE TABLE point_device_ultimos_30_dias, NO Log, NO FALLBACK AS (
SELECT DISTINCT PAY_MPOS_DEVICE_ID,
                Min(pay_created_dt) AS first_payment_date_point 
            FROM WHOWNER.BT_MP_PAY_PAYMENTS
            WHERE 1=1
            AND Coalesce(Upper(StrTok(pay_tracking_id, ':,' ,2)),'N/A') IN ('MPOS')
            AND pay_created_dt>= (Current_Date-30)
            GROUP BY 1
) WITH DATA UNIQUE PRIMARY INDEX(PAY_MPOS_DEVICE_ID) ON COMMIT PRESERVE ROWS;

INSERT INTO scoring.seller_point
SELECT 
	n.cus_cust_id_sel,
	n.first_payment_date_seller
FROM 
	seller_point_ultimos_30_dias n
	LEFT OUTER JOIN scoring.seller_point v ON
		n.cus_cust_id_sel = v.cus_cust_id_sel
WHERE
	v.cus_cust_id_sel IS NULL;

	INSERT INTO scoring.point_device
SELECT 
	n.PAY_MPOS_DEVICE_ID,
	n.first_payment_date_point
FROM 
	point_device_ultimos_30_dias n
	LEFT OUTER JOIN scoring.point_device v ON
		n.PAY_MPOS_DEVICE_ID = v.PAY_MPOS_DEVICE_ID
WHERE
	v.PAY_MPOS_DEVICE_ID IS NULL;
	
DROP TABLE seller_point_ultimos_30_dias;
DROP TABLE point_device_ultimos_30_dias;

--****************************************************
-- CREO TABLAS TEMPORALES PARA ACELERAR EL PROCESO
--****************************************************
CREATE MULTISET VOLATILE TABLE VLT_seller_point, NO Log, NO FALLBACK AS ( 
SELECT a.pay_payment_id,
       d.first_payment_date_seller
FROM WHOWNER.BT_MP_PAY_PAYMENTS a 
JOIN scoring.seller_point d
ON a.cus_cust_id_sel=d.cus_cust_id_sel
WHERE 1=1
AND a.pay_created_dt >=(Add_Months((Current_Date - Extract(DAY From Current_Date)+1),-7))
AND Coalesce(Upper(StrTok(a.pay_tracking_id, ':,' ,2)),'N/A') IN ('MPOS')
) WITH DATA UNIQUE PRIMARY INDEX(pay_payment_id) ON COMMIT PRESERVE ROWS;

--****************************************************
-- CREO TABLAS TEMPORALES PARA ACELERAR EL PROCESO
--****************************************************
CREATE MULTISET VOLATILE TABLE VLT_point_device, NO Log, NO FALLBACK AS ( 
SELECT a.pay_payment_id,
       e.first_payment_date_point
FROM WHOWNER.BT_MP_PAY_PAYMENTS a 
JOIN scoring.point_device e
ON a.PAY_MPOS_DEVICE_ID = e.PAY_MPOS_DEVICE_ID
WHERE 1=1
AND a.pay_created_dt >=(Add_Months((Current_Date - Extract(DAY From Current_Date)+1),-7))
AND Coalesce(Upper(StrTok(a.pay_tracking_id, ':,' ,2)),'N/A') IN ('MPOS')
) WITH DATA UNIQUE PRIMARY INDEX(pay_payment_id) ON COMMIT PRESERVE ROWS;

CREATE MULTISET VOLATILE TABLE DIARIO, NO Log, NO FALLBACK AS ( 
SELECT 
	StrTok(a.pay_tracking_id, ':,', 6) AS CHIP_SWIPE ,
	StrTok(a.pay_tracking_id, ':,', 4) AS SO ,
	Extract(HOUR From a.pay_created_datetime) AS hora, 
	a.PAY_PAYMENT_ID, 
	a.pay_last_modified_dt, 
	a.cus_cust_id_sel, 
	a.PAY_CCD_ACQUIRER_ID, 
	a.PAY_CCD_CARDHOLDER_NAME, 
	a.PAY_CCD_FIRST_SIX_DIGITS || A.PAY_CCD_LAST_FOUR_DIGITS AS TC,
	a.pay_ccd_first_six_digits,
	a.PAY_CREATED_DATETIME, 
	a.pay_created_dt,
	a.PAY_MPOS_DEVICE_ID, 
	a.PAY_STATUS_DETAIL_CODE, 
	a.PAY_STATUS_ID, 
	a.PAY_TOTAL_PAID_AMT, 
	a.pay_total_paid_dol_amt,
	a.pay_transaction_dol_amt,
	a.pay_shipping_cost_dol_amt,
	a.pay_transaction_amt,
	a.pay_shipping_cost_amt,
	--A.pay_tracking_id,
	a.sit_site_id,
	a.PAY_PM_ID, 
	a.pay_ccd_installments_qty,
    b.Pay_Try_Last,

    b.PAY_PM_DESC,
	b.industry_id,
    b.pay_pm_type_id AS TIPO_TRANSACCION,
	d.first_payment_date_seller,
	e.first_payment_date_point,
	a.PAY_DIFFERENTIAL_PRICING_ID,	
	a.PAY_CCD_LAST_FOUR_DIGITS
FROM WHOWNER.BT_MP_PAY_PAYMENTS a
INNER JOIN DIARIO_SOR b ON a.pay_payment_id=b.pay_payment_id 
--LEFT JOIN scoring.seller_point d ON a.cus_cust_id_sel=d.cus_cust_id_sel
LEFT JOIN VLT_seller_point d ON a.pay_payment_id=d.pay_payment_id
--LEFT JOIN scoring.point_device e ON a.PAY_MPOS_DEVICE_ID = e.PAY_MPOS_DEVICE_ID
LEFT JOIN VLT_point_device e ON a.pay_payment_id = e.pay_payment_id
WHERE 1=1
AND a.pay_created_dt >=(Add_Months((Current_Date - Extract(DAY From Current_Date)+1),-7))
AND Coalesce(Upper(StrTok(a.pay_tracking_id, ':,' ,2)),'N/A') IN ('MPOS')
) WITH DATA UNIQUE PRIMARY INDEX(pay_payment_id) ON COMMIT PRESERVE ROWS;

DROP TABLE DIARIO_SOR;
DROP TABLE VLT_seller_point;
DROP TABLE VLT_point_device;

--agrega banco y metodo de pago
CREATE MULTISET VOLATILE TABLE DIARIO_2, NO Log, NO FALLBACK AS ( 
SELECT 
	A.*,
 bn.bank_map AS	bank_desc,
bn.site_issuer,
 (CASE WHEN f.pay_payment_id IS NOT NULL OR g.pay_payment_id IS NOT NULL OR h.pay_payment_id IS NOT NULL THEN 1 ELSE 0 end) AS Fraude
FROM DIARIO A 
LEFT JOIN WHOWNER.LK_FRD_BINES BN ON A.PAY_CCD_FIRST_SIX_DIGITS = BN.BIN
LEFT JOIN scoring.FRAUDE_MLB f ON a.pay_payment_id=f.pay_payment_id
LEFT JOIN scoring.stone_payments g ON a.pay_payment_id=g.pay_payment_id
LEFT JOIN scoring.fraude_mlm_point h ON a.pay_payment_id=Cast(h.pay_payment_id AS DECIMAL(19,0))
WHERE 1=1
) WITH DATA PRIMARY INDEX(pay_payment_id) ON COMMIT PRESERVE ROWS;


DROP TABLE DIARIO;

--****************************************************
-- CREO TABLAS TEMPORALES PARA ACELERAR EL PROCESO
--****************************************************
CREATE MULTISET VOLATILE TABLE VLT_LK_MP_POINT_DEVICE, NO Log, NO FALLBACK AS ( 
SELECT a.pay_payment_id,
       c.POINT_DEVICE_TYPE, c.CHANNEL
FROM DIARIO_2 a
JOIN WHOWNER.LK_MP_POINT_DEVICE c
ON c.PAY_MPOS_DEVICE_ID=a.pay_mpos_device_id
GROUP BY 1,2,3
) WITH DATA UNIQUE PRIMARY INDEX(pay_payment_id) ON COMMIT PRESERVE ROWS;

CREATE MULTISET VOLATILE TABLE DIARIO_3, NO Log, NO FALLBACK AS (
SELECT 
    a.*,
	Substr( b.pay_internal_metadata, Position('mcc_assigned' IN  b.pay_internal_metadata )+15, 4 ) AS MCC,
    (CASE WHEN b.PAY_METADATA LIKE '%"pin_validation":"pin_online"%' THEN 'CHIP&PIN ONLINE'
   WHEN b.PAY_METADATA LIKE '%"pin_validation":"pin_offline"%' THEN 'CHIP&PIN OFFLINE'
    WHEN  b.PAY_METADATA LIKE '%"pin_validation":"pin_not_validated"%' THEN 'CHIP NOT PIN'
    WHEN  b.PAY_METADATA LIKE '%"was_pin":false%' THEN 'CHIP NOT PIN '
    WHEN  b.PAY_METADATA LIKE '%"was_pin":true%' AND b.PAY_METADATA NOT LIKE '%"pin_validation"%' THEN 'CHIP&PIN SIN CATEGORIA'
    ELSE 'SIN DATO' END) AS CHIP_PIN,
    StrTok(b.pay_metadata, ':,', 4) AS pin,
    C.POINT_DEVICE_TYPE,
	C.CHANNEL,
    (CASE WHEN Substr((b.pay_metadata), Position('is_fallback' IN b.pay_metadata)+5, 30) LIKE '%fals%' THEN 'false'
        WHEN Substr((b.pay_metadata), Position('is_fallback' IN b.pay_metadata)+5, 30) LIKE '%tru%' THEN 'true'
        ELSE 'unk' end) AS is_fallback
FROM DIARIO_2 a
LEFT JOIN WHOWNER.BT_MP_PAY_METADATA b ON a.pay_payment_id=b.pay_payment_id
--LEFT JOIN WHOWNER.LK_MP_POINT_DEVICE C ON C.PAY_MPOS_DEVICE_ID=A.pay_mpos_device_id
LEFT JOIN VLT_LK_MP_POINT_DEVICE C ON C.pay_payment_id=a.pay_payment_id
) WITH DATA PRIMARY INDEX(pay_payment_id) ON COMMIT PRESERVE ROWS;

DROP TABLE DIARIO_2;
DROP TABLE VLT_LK_MP_POINT_DEVICE;

CREATE MULTISET VOLATILE TABLE diario_4, NO Log, NO FALLBACK AS(
        SELECT a.*,
        
       b.external_response_Code,
b.Merchant,
Case when b.merchant in ('43','9791225','146189136') then 1 else 0  end as free_pass

From diario_3 a
Left join SCORING.GTW_APPROVAL_MODEL B on a.pay_payment_id=b.id_pago
   
) WITH DATA UNIQUE PRIMARY INDEX(pay_payment_id) ON COMMIT PRESERVE ROWS;

DROP TABLE DIARIO_2;

CREATE MULTISET VOLATILE TABLE PERSONERIA_USUARIOS, NO Log, NO FALLBACK AS(
        SELECT 
        c.cus_cust_id
        ,/*CASE WHEN b.cus_kyc_entity_type = 'company' THEN 'PJ' 
              WHEN (c.sit_site_id_cus = 'MLB' AND c.CUS_CUST_EMPRESA IS NOT NULL AND Length(c.cus_cust_doc_number) = '14' ) THEN 'PJ' 
              WHEN (c.sit_site_id_cus = 'MLB' AND c.CUS_CUST_EMPRESA IS NULL AND c.cus_cust_doc_number IS NOT NULL AND Upper(c.cus_cust_doc_type) IN ('CNPJ','OTRO','OUTRO') AND Length( c.cus_cust_doc_number) = '14') THEN 'PJ'* --esto no va mas */
Case when (c.sit_site_id_cus = 'MLB' AND  
    WHEN UPPER(CUS_CUST_DOC_TYPE) LIKE '%CNPJ%') THEN 'PJ'
    WHEN (c.sit_site_id_cus = 'MLB' AND  UPPER(CUS_CUST_DOC_TYPE) IN ('OTRO','OUTRO') AND LENGTH(CUS_CUST_DOC_NUMBER) = 14 ) THEN 'PJ'

              WHEN (c.sit_site_id_cus = 'MLM' AND c.CUS_CUST_EMPRESA IS NOT NULL AND c.cus_cust_doc_type = 'RFC' AND Length(c.cus_cust_doc_number) = '12') THEN 'PJ'
              WHEN (c.sit_site_id_cus = 'MLM' AND c.cus_cust_doc_number IS NOT NULL AND c.cus_cust_doc_type = 'RFC' AND Length(c.cus_cust_doc_number) = '12') THEN 'PJ'
              WHEN (c.sit_site_id_cus = 'MLA' AND Length(c.cus_cust_doc_number) = 11 AND (c.cus_cust_doc_number LIKE '30%' OR c.cus_cust_doc_number LIKE '33%' OR c.cus_cust_doc_number LIKE '34%')) THEN 'PJ'
              WHEN (c.sit_site_id_cus = 'MLA' AND Length(c.cus_cuit) = 11 AND (c.cus_cuit LIKE '30%' OR c.cus_cuit LIKE '33%' OR c.cus_cuit LIKE '34%')) THEN 'PJ'
              --WHEN (c.sit_site_id_cus = 'MLC' AND c.cus_cust_doc_type IN ('RUT','R.U.T.','rut') AND INSTR(c.cus_cust_doc_number,'-') > 0 AND  
              --      CAST(REGEXP_REPLACE(LEFT(c.cus_cust_doc_number,(LENGTH(CAST(c.cus_cust_doc_number AS VARCHAR(300))) - 2)) , '[^0-9]') AS BIGINT) >= 50000000) THEN 'PJ'
              WHEN (c.sit_site_id_cus = 'MLC' AND c.cus_cust_doc_type IN ('RUT','R.U.T.','rut') AND Instr(c.cus_cust_doc_number,'-') = 0 AND Cast(RegExp_Replace(Cast(c.cus_cust_doc_number AS VARCHAR(300)), '[^0-9]') AS BIGINT) >= 50000000) THEN 'PJ'
              WHEN (c.sit_site_id_cus = 'MCO' AND c.cus_cust_doc_type IN ('NIT','RUT','NI.T.') AND Length(RegExp_Replace(c.cus_cust_doc_number, '[^0-9]')) = 9 AND RegExp_Replace(c.cus_cust_doc_number, '[^0-9]') >= '800000000' AND RegExp_Replace(c.cus_cust_doc_number, '[^0-9]') <= '999999999') THEN 'PJ'
              WHEN b.cus_kyc_entity_type = 'person' THEN 'PF' 
              WHEN c.cus_cust_doc_number IS NOT NULL THEN 'PF'
              ELSE 'unknown' END AS cus_entity_type
        FROM WHOWNER.LK_CUS_CUSTOMERS_DATA c 
        LEFT JOIN WHOWNER.BT_MP_KYC_LEVEL b ON c.cus_cust_id = b.cus_cust_id 
                                            AND b.kyc_expiration_date IS NULL 
                                            AND b.sit_site_id IN ('MLM')
    QUALIFY 1 = Row_Number () Over (PARTITION BY c.cus_cust_id ORDER BY b.kyc_completed_datetime DESC)
    ) WITH DATA PRIMARY INDEX (cus_cust_id) ON COMMIT PRESERVE ROWS;




CALL MELI_LIB.PR_DROP_SCORING_TABLE('reportes_point');
--drop table scoring.reportes_point;

CREATE MULTISET TABLE scoring.reportes_point AS (
SELECT 
    a.*,
	CUST_SEGMENT_CROSS,
CUST_SUB_SEGMENT_CROSS,
CUST_SEGMENT_POINT,
CUST_SUB_SEGMENT_POINT,
    cus_entity_type,
    (CASE WHEN lkp.cbk_high_estim IS NOT NULL THEN lkp.cbk_high_estim ELSE 1 END) ESTIMADOR,
    est.cbk_pred_final,
    CASE WHEN (a.pay_created_dt-first_payment_date_seller) < 90 THEN 1 ELSE 0 end Seller_new,
    CASE WHEN (a.pay_created_dt-first_payment_date_point) < 90 THEN 1 ELSE 0 end Point_new
FROM DIARIO_4 a
LEFT JOIN scoring.estimador_operativo lkp  
  ON lkp.site=a.sit_site_id AND lkp.vertical='MPOS' AND lkp.sco_date=Extract(YEAR From a.pay_created_dt) || '-' || Cast(Extract(MONTH From A.pay_created_dt) AS VARCHAR(2)) AND lkp.vertical IS NOT NULL
LEFT JOIN Scoring.estimador_cbk_v2 est             ----estimador v2
	ON a.pay_payment_id = est.pay_payment_id
LEFT JOIN WHOWNER.LK_MP_SEGMENTATION_SELLERS s 
  ON a.cus_cust_id_sel=s.cus_cust_id_sel AND s.TIM_MONTH = ( a.pay_created_dt /100 + 190000)
LEFT JOIN PERSONERIA_USUARIOS b 
  ON b.cus_cust_id = a.cus_cust_id_sel
) WITH DATA PRIMARY INDEX(pay_payment_id);

DROP TABLE DIARIO_3;

CALL MELI_LIB.PR_DROP_SCORING_TABLE('reportes_point_metricas_mensuales');

CREATE MULTISET TABLE scoring.reportes_point_metricas_mensuales AS (
--1. Tabla mensual
 SELECT
 To_Char(pay_created_dt,'YYYY-MM') YYYY_MM,
 pay_try_last, 
 Sit_site_id,
Free_pass,
site_issuer,
 CASE WHEN sit_site_id='MLA' AND  Upper(PAY_CCD_ACQUIRER_ID) LIKE '%VISA%' THEN 'Prisma'
	 WHEN sit_site_id='MLA' AND  Upper(PAY_CCD_ACQUIRER_ID) LIKE '%MASTERCARD%' THEN 'Firstdata'
	 WHEN sit_site_id='MLB' AND  Upper(PAY_CCD_ACQUIRER_ID) LIKE '%STONE%' THEN 'Stone'
	 WHEN sit_site_id='MLB' AND  Upper(PAY_CCD_ACQUIRER_ID) LIKE '%GENOVA%' THEN 'Genova'
	 ELSE PAY_CCD_ACQUIRER_ID end AS PAY_CCD_ACQUIRER_ID,
 CASE WHEN sit_site_id='MLA' AND  pay_ccd_first_six_digits IN  (522684,476940,604246,419080,423270,604225) AND pay_created_dt>'2020-04-01'  THEN 1 ELSE 0 end alimentar,
 chip_swipe,
 chip_pin,
 MCC,
 so,
 TIPO_TRANSACCION,
 PAY_PM_DESC,
 industry_id,
 CASE WHEN sit_site_id='MLB' AND  Upper(bank_desc) LIKE '%ITAU%' THEN 'Itau'
         WHEN  sit_site_id='MLB' AND Upper(bank_desc) LIKE '%SANTANDER%' THEN 'Santander'
         WHEN  sit_site_id='MLB' AND  Upper(bank_desc) LIKE '%BANCO DO BRASIL%' THEN 'Banco do Brasil'
         WHEN  sit_site_id='MLB' AND  Upper(bank_desc) LIKE '%BB-ADMINISTRADORA DE CARTOES DE CREDITO %' THEN 'Banco do Brasil'
         WHEN  sit_site_id='MLB' AND Upper(bank_desc) LIKE '%BRADESCO%' THEN 'Bradesco'
         WHEN  sit_site_id='MLB' AND Upper(bank_desc) LIKE '%NUBANK%' THEN 'Nubank'
                     when  sit_site_id='MLB' and  upper(bank_desc) like '%C6%' then 'C6'
         when  sit_site_id='MLB' and upper(bank_desc) like '%INTER%' then 'INTER'
  when  sit_site_id='MLB' and upper(bank_desc) like '%DIGIO%' then  'DIGIO'
         WHEN  sit_site_id='MLB' AND Upper(bank_desc) LIKE '%CAIXA%' THEN 'Caixa' 
         
         WHEN sit_site_id='MLM' AND Upper(bank_desc) LIKE '%BBVA%' THEN 'BBVA BANCOMER'
         WHEN sit_site_id='MLM' AND Upper(bank_desc) LIKE '%BANCOMER%' THEN 'BBVA BANCOMER' --cambio
         WHEN sit_site_id='MLM' AND Upper(bank_desc) LIKE '%BANAMEX%' THEN 'BANAMEX' 
         WHEN sit_site_id='MLM' AND Upper(bank_desc) LIKE '%BANCO NACIONAL DE MEXICO%' THEN 'BANAMEX'
         WHEN sit_site_id='MLM' AND Upper(bank_desc) LIKE '%SANTANDER%' THEN 'SANTANDER'
         WHEN sit_site_id='MLM' AND Upper(bank_desc) LIKE '%BANORTE%' THEN 'BANORTE'
         WHEN sit_site_id='MLM' AND Upper(bank_desc) LIKE '%BANCO MERCANTIL DEL NORTE%' THEN 'BANORTE'
         WHEN sit_site_id='MLM' AND Upper(bank_desc) LIKE '%AMERICAN EXPRESS%' THEN 'AMEX' 
         WHEN sit_site_id='MLM' AND Upper(bank_desc) LIKE '%HSBC%' THEN 'HSBC'
         WHEN sit_site_id='MLM' AND Upper(bank_desc) LIKE '%BANCO INBURSA%' THEN 'BANCO INBURSA'
         WHEN sit_site_id='MLM' AND Upper(bank_desc) LIKE '%BANCOPPEL%' THEN 'BANCOPPEL'
         WHEN sit_site_id='MLM' AND Upper(bank_desc) LIKE '%SCOTIABANK%' THEN 'SCOTIABANK'
         WHEN sit_site_id='MLM' AND Upper(bank_desc) LIKE '%BANCO AZTECA%' THEN 'BANCO AZTECA'
         WHEN sit_site_id='MLM' AND Upper(bank_desc) LIKE '%LIVERPOOL%' THEN 'LIVERPOOL'
         
         WHEN sit_site_id='MLA' AND Upper(bank_desc) LIKE '%SANTANDER%' THEN 'Santander'
         WHEN sit_site_id='MLA' AND Upper(bank_desc) LIKE '%NARANJA%' THEN 'Naranja'
         WHEN sit_site_id='MLA' AND Upper(bank_desc) LIKE '%NACION%' THEN 'Nacion'
         --when sit_site_id='MLA' AND UPPER(bank_desc) like '%PROVINCIA%' THEN 'Provincia'
         WHEN sit_site_id='MLA' AND Upper(bank_desc) IN ('BANCO DE LA PROVINCIA DE BUENOS AIRES','BANCO PROVINCIA') THEN 'Provincia'
         WHEN sit_site_id='MLA' AND Upper(bank_desc) LIKE '%GALICIA%' THEN 'Galicia'
         WHEN sit_site_id='MLA' AND Upper(bank_desc) LIKE '%FRANCES%' THEN 'Frances'
         WHEN sit_site_id='MLA' AND Upper(bank_desc) LIKE '%MACRO%' THEN 'Macro'
         WHEN sit_site_id='MLA' AND Upper(bank_desc) LIKE '%HSBC%' THEN 'HSBC'
         WHEN sit_site_id='MLA' AND Upper(bank_desc) LIKE '%CIUDAD%' THEN 'CIUDAD'
         WHEN sit_site_id='MLA' AND Upper(bank_desc) LIKE '%CREDICOP%' THEN 'Credicop'
         WHEN sit_site_id='MLA' AND Upper(bank_desc) LIKE '%PATAGONIA%' THEN 'Patagonia'
         WHEN sit_site_id='MLA' AND Upper(bank_desc) LIKE '%SUPERVIELLE%' THEN 'Supervielle'
         WHEN sit_site_id='MLA' AND Upper(bank_desc) LIKE '%CORDOBA%' THEN 'Cordoba'
         WHEN sit_site_id='MLA' AND Upper(bank_desc) LIKE '%CENCOSUD%' THEN 'Cencosud'
         WHEN sit_site_id='MLA' AND Upper(bank_desc) LIKE '%ICBC%' THEN 'ICBC'
         WHEN sit_site_id='MLA' AND Upper(bank_desc) LIKE '%ITAU%' THEN 'ITAU'
         WHEN sit_site_id='MLA' AND Upper(bank_desc) LIKE '%BBVA%' THEN 'BBVA'
         WHEN Upper(bank_desc) IS NULL THEN 'NULL' 
         ELSE 'OTROS' END AS BANCOS,
    pay_status_id,
    pay_status_detail_code,
 CASE WHEN pay_total_paid_dol_amt<50 THEN '1.<50'
      	 WHEN pay_total_paid_dol_amt<100 THEN '2.<100'
    	 WHEN pay_total_paid_dol_amt<250 THEN '3.<250'
    	 WHEN pay_total_paid_dol_amt<500 THEN '4.<500'
      	 WHEN pay_total_paid_dol_amt<1000 THEN '5.<1000'
    	 ELSE '6.>1000' end AS ASP_USD, 
    (CASE WHEN sit_site_id IN ('MLB') AND point_device_type IN ('Point Bluetooth') THEN 'Point Mini Newland' ELSE point_device_type end) AS point_device_type,
    channel,
    pay_ccd_installments_qty,
    estimador,
    CASE WHEN PAY_DIFFERENTIAL_PRICING_ID IN (33709195) THEN 1 ELSE 0 end AS ahora_12, --,33665186,33665185,33666181, 33666182,33663184
    is_fallback,
    Fraude,
    --case when (pay_created_dt - first_payment_date_seller) DAY (4) <= 90 then 'NEW' ELSE 'OLD' END AS ANTIGUEDAD_SELLER,
    Seller_new AS ANTIGUEDAD_SELLER,
   CUST_SEGMENT_CROSS,
CUST_SUB_SEGMENT_CROSS,
CUST_SEGMENT_POINT,
CUST_SUB_SEGMENT_POINT,

    cus_entity_type,
--case when (pay_created_dt - first_payment_date_point) DAY (4) <= 90 then 'NEW' ELSE 'OLD' END AS ANTIGUEDAD_POINT,
   Point_new AS ANTIGUEDAD_POINT,
   Sum(fraude) AS FRAUDE_QTY,
   Sum(CASE WHEN FRAUDE IN ('1') THEN (pay_transaction_dol_amt + pay_shipping_cost_dol_amt) ELSE 0 end) AS FRAUDE_USD,
	Sum((pay_transaction_dol_amt + pay_shipping_cost_dol_amt)) AS INCOMING, 
  Sum(CASE WHEN ( pay_status_detail_code NOT LIKE '%high_risk%' ) THEN (pay_transaction_dol_amt + pay_shipping_cost_dol_amt) end) AS INCOMING_BANCO,  
	Sum(CASE WHEN PAY_STATUS_ID IN ('approved','charged_back','refunded') THEN (pay_transaction_dol_amt + pay_shipping_cost_dol_amt) end) AS TPV, 
	Sum(CASE WHEN PAY_STATUS_ID IN ('charged_back') THEN (pay_transaction_dol_amt + pay_shipping_cost_dol_amt) end) AS CBK, 
  CBK/ESTIMADOR CBK_ESTIMADO,

	Sum(CASE WHEN pay_status_id IN ('rejected') THEN (pay_transaction_dol_amt + pay_shipping_cost_dol_amt) end) AS RECHAZOS, 
	Sum(CASE WHEN pay_status_id IN ('rejected') AND pay_status_detail_code NOT LIKE '%high_risk%' THEN (pay_transaction_dol_amt + pay_shipping_cost_dol_amt) end) AS RECHAZOS_BANCARIOS,
	Sum(CASE WHEN pay_status_id IN ('rejected') AND pay_status_detail_code  LIKE '%high_risk%' THEN (pay_transaction_dol_amt + pay_shipping_cost_dol_amt) end) AS RECHAZOS_MP, 
	Count(DISTINCT pay_payment_id) AS INCOMING_QTY, 
	Sum(CASE WHEN (PAY_STATUS_ID IN ('approved','charged_back','refunded')) OR(pay_status_detail_code NOT LIKE '%high_risk%' )  THEN  1 ELSE 0 end) AS INCOMING_banco_qty,
	Sum( CASE WHEN PAY_STATUS_ID IN ('approved','charged_back','refunded') THEN  1 ELSE 0 end) AS TPV_QTY, 
	Sum( CASE WHEN PAY_STATUS_ID IN ('charged_back') THEN  1 ELSE 0 end) AS CBK_QTY, 
	
	Sum( CASE WHEN pay_status_id IN ('rejected') THEN  1 ELSE 0 end) AS RECHAZOS_QTY, 
	Sum( CASE WHEN pay_status_id IN ('rejected') AND pay_status_detail_code NOT LIKE '%high_risk%' THEN  1 ELSE 0 end) AS RECHAZOS_BANCARIOS_QTY,
	Sum( CASE WHEN pay_status_id IN ('rejected') AND pay_status_detail_code  LIKE '%high_risk%' THEN 1 ELSE 0 end) AS RECHAZOS_MP_QTY,
	Sum(cbk_pred_final) AS cbk_beta

	FROM 	scoring.reportes_point	

  GROUP BY 1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28

)WITH DATA PRIMARY INDEX(
YYYY_MM,
pay_try_last, 
sit_site_id,
alimentar,
chip_swipe,
chip_pin,
MCC,
so,
TIPO_TRANSACCION,
PAY_PM_DESC,
BANCOS,
pay_status_id,
pay_status_detail_code,
ASP_USD, 
point_device_type,
channel,
pay_ccd_installments_qty,
estimador
);

CALL MELI_LIB.PR_DROP_SCORING_TABLE('reportes_point_metricas_semanal');

CREATE TABLE scoring.reportes_point_metricas_semanal AS (
 SELECT
 Td_Week_Begin(pay_created_dt) fecha_semana_inicio,
 pay_try_last, 
 Sit_site_id,
Free_pass,
site_issuer,
 CASE WHEN sit_site_id='MLA' AND  Upper(PAY_CCD_ACQUIRER_ID) LIKE '%VISA%' THEN 'Prisma'
	 WHEN sit_site_id='MLA' AND  Upper(PAY_CCD_ACQUIRER_ID) LIKE '%MASTERCARD%' THEN 'Firstdata'
	 WHEN sit_site_id='MLB' AND  Upper(PAY_CCD_ACQUIRER_ID) LIKE '%STONE%' THEN 'Stone'
	 WHEN sit_site_id='MLB' AND  Upper(PAY_CCD_ACQUIRER_ID) LIKE '%GENOVA%' THEN 'Genova'
	 ELSE PAY_CCD_ACQUIRER_ID end AS PAY_CCD_ACQUIRER_ID,
 CASE WHEN sit_site_id='MLA' AND  pay_ccd_first_six_digits IN  (522684,476940,604246,419080,423270,604225) AND pay_created_dt>'2020-04-01'  THEN 1 ELSE 0 end alimentar,
 chip_swipe,
 chip_pin,
 MCC,
 so,
 TIPO_TRANSACCION,
 PAY_PM_DESC,
 industry_id,
 CASE WHEN sit_site_id='MLB' AND  Upper(bank_desc) LIKE '%ITAU%' THEN 'Itau'
         WHEN  sit_site_id='MLB' AND Upper(bank_desc) LIKE '%SANTANDER%' THEN 'Santander'
         WHEN  sit_site_id='MLB' AND  Upper(bank_desc) LIKE '%BANCO DO BRASIL%' THEN 'Banco do Brasil'
         WHEN  sit_site_id='MLB' AND  Upper(bank_desc) LIKE '%BB-ADMINISTRADORA DE CARTOES DE CREDITO %' THEN 'Banco do Brasil'
         WHEN  sit_site_id='MLB' AND Upper(bank_desc) LIKE '%BRADESCO%' THEN 'Bradesco'
         WHEN  sit_site_id='MLB' AND Upper(bank_desc) LIKE '%NUBANK%' THEN 'Nubank'
         WHEN  sit_site_id='MLB' AND Upper(bank_desc) LIKE '%DISCOVER%' THEN 'Discover '
                     when  sit_site_id='MLB' and  upper(bank_desc) like '%C6%' then 'C6'
         when  sit_site_id='MLB' and upper(bank_desc) like '%INTER%' then 'INTER'
  when  sit_site_id='MLB' and upper(bank_desc) like '%DIGIO%' then  'DIGIO'
         WHEN  sit_site_id='MLB' AND Upper(bank_desc) LIKE '%CAIXA%' THEN 'Caixa' 
         
        WHEN sit_site_id='MLM' AND Upper(bank_desc) LIKE '%BBVA%' THEN 'BBVA BANCOMER'
         WHEN sit_site_id='MLM' AND Upper(bank_desc) LIKE '%BANCOMER%' THEN 'BBVA BANCOMER' --cambio
         WHEN sit_site_id='MLM' AND Upper(bank_desc) LIKE '%BANAMEX%' THEN 'BANAMEX' 
         WHEN sit_site_id='MLM' AND Upper(bank_desc) LIKE '%BANCO NACIONAL DE MEXICO%' THEN 'BANAMEX'
         WHEN sit_site_id='MLM' AND Upper(bank_desc) LIKE '%SANTANDER%' THEN 'SANTANDER'
         WHEN sit_site_id='MLM' AND Upper(bank_desc) LIKE '%BANORTE%' THEN 'BANORTE'
         WHEN sit_site_id='MLM' AND Upper(bank_desc) LIKE '%BANCO MERCANTIL DEL NORTE%' THEN 'BANORTE'
         WHEN sit_site_id='MLM' AND Upper(bank_desc) LIKE '%AMERICAN EXPRESS%' THEN 'AMEX' 
         WHEN sit_site_id='MLM' AND Upper(bank_desc) LIKE '%HSBC%' THEN 'HSBC'
         WHEN sit_site_id='MLM' AND Upper(bank_desc) LIKE '%BANCO INBURSA%' THEN 'BANCO INBURSA'
         WHEN sit_site_id='MLM' AND Upper(bank_desc) LIKE '%BANCOPPEL%' THEN 'BANCOPPEL'
         WHEN sit_site_id='MLM' AND Upper(bank_desc) LIKE '%SCOTIABANK%' THEN 'SCOTIABANK'
         WHEN sit_site_id='MLM' AND Upper(bank_desc) LIKE '%BANCO AZTECA%' THEN 'BANCO AZTECA'
         WHEN sit_site_id='MLM' AND Upper(bank_desc) LIKE '%LIVERPOOL%' THEN 'LIVERPOOL'
         
         WHEN sit_site_id='MLA' AND Upper(bank_desc) LIKE '%SANTANDER%' THEN 'Santander'
         WHEN sit_site_id='MLA' AND Upper(bank_desc) LIKE '%NARANJA%' THEN 'Naranja'
         WHEN sit_site_id='MLA' AND Upper(bank_desc) LIKE '%NACION%' THEN 'Nacion'
        -- when sit_site_id='MLA' AND UPPER(bank_desc) like '%PROVINCIA%' THEN 'Provincia'
        WHEN sit_site_id='MLA' AND Upper(bank_desc) IN ('BANCO DE LA PROVINCIA DE BUENOS AIRES','BANCO PROVINCIA') THEN 'Provincia'
         WHEN sit_site_id='MLA' AND Upper(bank_desc) LIKE '%GALICIA%' THEN 'Galicia'
         WHEN sit_site_id='MLA' AND Upper(bank_desc) LIKE '%FRANCES%' THEN 'Frances'
         WHEN sit_site_id='MLA' AND Upper(bank_desc) LIKE '%MACRO%' THEN 'Macro'
         WHEN sit_site_id='MLA' AND Upper(bank_desc) LIKE '%HSBC%' THEN 'HSBC'
         WHEN sit_site_id='MLA' AND Upper(bank_desc) LIKE '%CIUDAD%' THEN 'CIUDAD'
         WHEN sit_site_id='MLA' AND Upper(bank_desc) LIKE '%CREDICOP%' THEN 'Credicop'
         WHEN sit_site_id='MLA' AND Upper(bank_desc) LIKE '%PATAGONIA%' THEN 'Patagonia'
         WHEN sit_site_id='MLA' AND Upper(bank_desc) LIKE '%SUPERVIELLE%' THEN 'Supervielle'
         WHEN sit_site_id='MLA' AND Upper(bank_desc) LIKE '%CORDOBA%' THEN 'Cordoba'
         WHEN sit_site_id='MLA' AND Upper(bank_desc) LIKE '%CENCOSUD%' THEN 'Cencosud'
         WHEN sit_site_id='MLA' AND Upper(bank_desc) LIKE '%ICBC%' THEN 'ICBC'
         WHEN sit_site_id='MLA' AND Upper(bank_desc) LIKE '%ITAU%' THEN 'ITAU'
         WHEN sit_site_id='MLA' AND Upper(bank_desc) LIKE '%BBVA%' THEN 'BBVA'
         WHEN Upper(bank_desc) IS NULL THEN 'NULL' 
         ELSE 'OTROS' END AS BANCOS,
    pay_status_id,
    pay_status_detail_code,
 CASE WHEN pay_total_paid_dol_amt<50 THEN '1.<50'
      	 WHEN pay_total_paid_dol_amt<100 THEN '2.<100'
    	 WHEN pay_total_paid_dol_amt<250 THEN '3.<250'
    	 WHEN pay_total_paid_dol_amt<500 THEN '4.<500'
      	 WHEN pay_total_paid_dol_amt<1000 THEN '5.<1000'
    	 ELSE '6.>1000' end AS ASP_USD,  
    (CASE WHEN sit_site_id IN ('MLB') AND point_device_type IN ('Point Bluetooth') THEN 'Point Mini Newland' ELSE point_device_type end) AS point_device_type,
    channel,
    estimador,
    pay_ccd_installments_qty,
    pay_ccd_first_six_digits,
    CASE WHEN PAY_DIFFERENTIAL_PRICING_ID IN (33709195) THEN 1 ELSE 0 end AS ahora_12, --,33665186,33665185,33666181, 33666182,33663184
    is_fallback,
    Fraude,
       --case when (pay_created_dt - first_payment_date_seller) DAY (4) <= 90 then 'NEW' ELSE 'OLD' END AS ANTIGUEDAD_SELLER,
    Seller_new AS ANTIGUEDAD_SELLER,
	CUST_SEGMENT_CROSS,
CUST_SUB_SEGMENT_CROSS,
CUST_SEGMENT_POINT,
CUST_SUB_SEGMENT_POINT,

    cus_entity_type,
--case when (pay_created_dt - first_payment_date_point) DAY (4) <= 90 then 'NEW' ELSE 'OLD' END AS ANTIGUEDAD_POINT,
   Point_new AS ANTIGUEDAD_POINT,
   Sum(fraude) AS FRAUDE_QTY,
   Sum(CASE WHEN FRAUDE IN ('1') THEN (pay_transaction_dol_amt + pay_shipping_cost_dol_amt) ELSE 0 end) AS FRAUDE_USD,
	Sum((pay_transaction_dol_amt + pay_shipping_cost_dol_amt)) AS INCOMING, 
  Sum(CASE WHEN ( pay_status_detail_code NOT LIKE '%high_risk%' ) THEN (pay_transaction_dol_amt + pay_shipping_cost_dol_amt) end) AS INCOMING_BANCO,  
	Sum(CASE WHEN PAY_STATUS_ID IN ('approved','charged_back','refunded') THEN (pay_transaction_dol_amt + pay_shipping_cost_dol_amt) end) AS TPV, 
	Sum(CASE WHEN PAY_STATUS_ID IN ('charged_back') THEN (pay_transaction_dol_amt + pay_shipping_cost_dol_amt) end) AS CBK, 
  CBK/ESTIMADOR CBK_ESTIMADO,

	Sum(CASE WHEN pay_status_id IN ('rejected') THEN (pay_transaction_dol_amt + pay_shipping_cost_dol_amt) end) AS RECHAZOS, 
	Sum(CASE WHEN pay_status_id IN ('rejected') AND pay_status_detail_code NOT LIKE '%high_risk%' THEN (pay_transaction_dol_amt + pay_shipping_cost_dol_amt) end) AS RECHAZOS_BANCARIOS,
	Sum(CASE WHEN pay_status_id IN ('rejected') AND pay_status_detail_code  LIKE '%high_risk%' THEN (pay_transaction_dol_amt + pay_shipping_cost_dol_amt) end) AS RECHAZOS_MP, 
	Count(DISTINCT pay_payment_id) AS INCOMING_QTY, 
	Sum(CASE WHEN (PAY_STATUS_ID IN ('approved','charged_back','refunded')) OR(pay_status_detail_code NOT LIKE '%high_risk%' )  THEN  1 ELSE 0 end) AS INCOMING_banco_qty,
	Sum( CASE WHEN PAY_STATUS_ID IN ('approved','charged_back','refunded') THEN  1 ELSE 0 end) AS TPV_QTY, 
	Sum( CASE WHEN PAY_STATUS_ID IN ('charged_back') THEN  1 ELSE 0 end) AS CBK_QTY, 
	
	Sum( CASE WHEN pay_status_id IN ('rejected') THEN  1 ELSE 0 end) AS RECHAZOS_QTY, 
	Sum( CASE WHEN pay_status_id IN ('rejected') AND pay_status_detail_code NOT LIKE '%high_risk%' THEN  1 ELSE 0 end) AS RECHAZOS_BANCARIOS_QTY,
	Sum( CASE WHEN pay_status_id IN ('rejected') AND pay_status_detail_code  LIKE '%high_risk%' THEN 1 ELSE 0 end) AS RECHAZOS_MP_QTY,
	Sum(cbk_pred_final) AS cbk_beta
	
	FROM 	scoring.reportes_point
	WHERE pay_created_dt>= (Current_Date-60)

  GROUP BY 1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29

)WITH DATA PRIMARY INDEX(
fecha_semana_inicio,
pay_try_last, 
 sit_site_id,
PAY_CCD_ACQUIRER_ID,
alimentar,
 chip_swipe,
 chip_pin,
 MCC,
 so,
 TIPO_TRANSACCION,
 PAY_PM_DESC,
ASP_USD, 
point_device_type,
channel,
estimador,
 pay_ccd_installments_qty,
pay_ccd_first_six_digits);

CALL MELI_LIB.PR_DROP_SCORING_TABLE('reportes_point_metricas_diaria');

CREATE MULTISET TABLE scoring.reportes_point_metricas_diaria AS (
 SELECT
 pay_created_dt,
 pay_try_last,
 Sit_site_id,
Free_pass,
site_issuer,
 CASE WHEN sit_site_id='MLA' AND  Upper(PAY_CCD_ACQUIRER_ID) LIKE '%VISA%' THEN 'Prisma'
WHEN sit_site_id='MLA' AND  Upper(PAY_CCD_ACQUIRER_ID) LIKE '%MASTERCARD%' THEN 'Firstdata'
WHEN sit_site_id='MLB' AND  Upper(PAY_CCD_ACQUIRER_ID) LIKE '%STONE%' THEN 'Stone'
WHEN sit_site_id='MLB' AND  Upper(PAY_CCD_ACQUIRER_ID) LIKE '%GENOVA%' THEN 'Genova'
ELSE PAY_CCD_ACQUIRER_ID end AS PAY_CCD_ACQUIRER_ID,
 CASE WHEN sit_site_id='MLA' AND  pay_ccd_first_six_digits IN  (522684,476940,604246,419080,423270,604225) AND pay_created_dt>'2020-04-01'  THEN 1 ELSE 0 end alimentar,
 chip_swipe,
 chip_pin,
 MCC,
 so,
 TIPO_TRANSACCION,
 PAY_PM_DESC,
 industry_id,
 CASE WHEN sit_site_id='MLB' AND  Upper(bank_desc) LIKE '%ITAU%' THEN 'Itau'
         WHEN  sit_site_id='MLB' AND Upper(bank_desc) LIKE '%SANTANDER%' THEN 'Santander'
         WHEN  sit_site_id='MLB' AND  Upper(bank_desc) LIKE '%BANCO DO BRASIL%' THEN 'Banco do Brasil'
         WHEN  sit_site_id='MLB' AND  Upper(bank_desc) LIKE '%BB-ADMINISTRADORA DE CARTOES DE CREDITO %' THEN 'Banco do Brasil'
         WHEN  sit_site_id='MLB' AND Upper(bank_desc) LIKE '%BRADESCO%' THEN 'Bradesco'
         WHEN  sit_site_id='MLB' AND Upper(bank_desc) LIKE '%NUBANK%' THEN 'Nubank'
             when  sit_site_id='MLB' and  upper(bank_desc) like '%C6%' then 'C6'
         when  sit_site_id='MLB' and upper(bank_desc) like '%INTER%' then 'INTER'
  when  sit_site_id='MLB' and upper(bank_desc) like '%DIGIO%' then  'DIGIO'

         WHEN  sit_site_id='MLB' AND Upper(bank_desc) LIKE '%CAIXA%' THEN 'Caixa'
         
         WHEN sit_site_id='MLM' AND Upper(bank_desc) LIKE '%BBVA%' THEN 'BBVA BANCOMER'
         WHEN sit_site_id='MLM' AND Upper(bank_desc) LIKE '%BANCOMER%' THEN 'BBVA BANCOMER' --cambio
         WHEN sit_site_id='MLM' AND Upper(bank_desc) LIKE '%BANAMEX%' THEN 'BANAMEX'
         WHEN sit_site_id='MLM' AND Upper(bank_desc) LIKE '%BANCO NACIONAL DE MEXICO%' THEN 'BANAMEX'
         WHEN sit_site_id='MLM' AND Upper(bank_desc) LIKE '%SANTANDER%' THEN 'SANTANDER'
         WHEN sit_site_id='MLM' AND Upper(bank_desc) LIKE '%BANORTE%' THEN 'BANORTE'
         WHEN sit_site_id='MLM' AND Upper(bank_desc) LIKE '%BANCO MERCANTIL DEL NORTE%' THEN 'BANORTE'
         WHEN sit_site_id='MLM' AND Upper(bank_desc) LIKE '%AMERICAN EXPRESS%' THEN 'AMEX'
         WHEN sit_site_id='MLM' AND Upper(bank_desc) LIKE '%HSBC%' THEN 'HSBC'
         WHEN sit_site_id='MLM' AND Upper(bank_desc) LIKE '%BANCO INBURSA%' THEN 'BANCO INBURSA'
         WHEN sit_site_id='MLM' AND Upper(bank_desc) LIKE '%BANCOPPEL%' THEN 'BANCOPPEL'
         WHEN sit_site_id='MLM' AND Upper(bank_desc) LIKE '%SCOTIABANK%' THEN 'SCOTIABANK'
         WHEN sit_site_id='MLM' AND Upper(bank_desc) LIKE '%BANCO AZTECA%' THEN 'BANCO AZTECA'
         WHEN sit_site_id='MLM' AND Upper(bank_desc) LIKE '%LIVERPOOL%' THEN 'LIVERPOOL'
         
         WHEN sit_site_id='MLA' AND Upper(bank_desc) LIKE '%SANTANDER%' THEN 'Santander'
         WHEN sit_site_id='MLA' AND Upper(bank_desc) LIKE '%NARANJA%' THEN 'Naranja'
         WHEN sit_site_id='MLA' AND Upper(bank_desc) LIKE '%NACION%' THEN 'Nacion'
         --when sit_site_id='MLA' AND UPPER(bank_desc) like '%PROVINCIA%' THEN 'Provincia'
         WHEN sit_site_id='MLA' AND Upper(bank_desc) IN ('BANCO DE LA PROVINCIA DE BUENOS AIRES','BANCO PROVINCIA') THEN 'Provincia'
         WHEN sit_site_id='MLA' AND Upper(bank_desc) LIKE '%GALICIA%' THEN 'Galicia'
         WHEN sit_site_id='MLA' AND Upper(bank_desc) LIKE '%FRANCES%' THEN 'Frances'
         WHEN sit_site_id='MLA' AND Upper(bank_desc) LIKE '%MACRO%' THEN 'Macro'
         WHEN sit_site_id='MLA' AND Upper(bank_desc) LIKE '%HSBC%' THEN 'HSBC'
         WHEN sit_site_id='MLA' AND Upper(bank_desc) LIKE '%CIUDAD%' THEN 'CIUDAD'
         WHEN sit_site_id='MLA' AND Upper(bank_desc) LIKE '%CREDICOP%' THEN 'Credicop'
         WHEN sit_site_id='MLA' AND Upper(bank_desc) LIKE '%PATAGONIA%' THEN 'Patagonia'
         WHEN sit_site_id='MLA' AND Upper(bank_desc) LIKE '%SUPERVIELLE%' THEN 'Supervielle'
         WHEN sit_site_id='MLA' AND Upper(bank_desc) LIKE '%CORDOBA%' THEN 'Cordoba'
         WHEN sit_site_id='MLA' AND Upper(bank_desc) LIKE '%CENCOSUD%' THEN 'Cencosud'
         WHEN sit_site_id='MLA' AND Upper(bank_desc) LIKE '%ICBC%' THEN 'ICBC'
         WHEN sit_site_id='MLA' AND Upper(bank_desc) LIKE '%ITAU%' THEN 'ITAU'
         WHEN sit_site_id='MLA' AND Upper(bank_desc) LIKE '%BBVA%' THEN 'BBVA'
         WHEN Upper(bank_desc) IS NULL THEN 'NULL'
         ELSE 'OTROS' END AS BANCOS,
    pay_status_id,
    pay_status_detail_code,
 CASE WHEN pay_total_paid_dol_amt<50 THEN '1.<50'
      	 WHEN pay_total_paid_dol_amt<100 THEN '2.<100'
    	 WHEN pay_total_paid_dol_amt<250 THEN '3.<250'
    	 WHEN pay_total_paid_dol_amt<500 THEN '4.<500'
      	 WHEN pay_total_paid_dol_amt<1000 THEN '5.<1000'
    	 ELSE '6.>1000' end AS ASP_USD,
    (CASE WHEN sit_site_id IN ('MLB') AND point_device_type IN ('Point Bluetooth') THEN 'Point Mini Newland' ELSE point_device_type end) AS point_device_type,
    channel,
    estimador,
    pay_ccd_installments_qty,
    pay_ccd_first_six_digits,
    CASE WHEN PAY_DIFFERENTIAL_PRICING_ID IN (33709195) THEN 1 ELSE 0 end AS ahora_12, --,33665186,33665185,33666181, 33666182,33663184
    is_fallback,
    Fraude,
        --case when (pay_created_dt - first_payment_date_seller) DAY (4) <= 90 then 'NEW' ELSE 'OLD' END AS ANTIGUEDAD_SELLER,
    Seller_new AS ANTIGUEDAD_SELLER,
	CUST_SEGMENT_CROSS,
CUST_SUB_SEGMENT_CROSS,
CUST_SEGMENT_POINT,
CUST_SUB_SEGMENT_POINT,

    cus_entity_type,
--case when (pay_created_dt - first_payment_date_point) DAY (4) <= 90 then 'NEW' ELSE 'OLD' END AS ANTIGUEDAD_POINT,
   Point_new AS ANTIGUEDAD_POINT,
   Sum(fraude) AS FRAUDE_QTY,
   Sum(CASE WHEN FRAUDE IN ('1') THEN (pay_transaction_dol_amt + pay_shipping_cost_dol_amt) ELSE 0 end) AS FRAUDE_USD,
Sum((pay_transaction_dol_amt + pay_shipping_cost_dol_amt)) AS INCOMING,
  Sum(CASE WHEN ( pay_status_detail_code NOT LIKE '%high_risk%' ) THEN (pay_transaction_dol_amt + pay_shipping_cost_dol_amt) end) AS INCOMING_BANCO,  
Sum(CASE WHEN PAY_STATUS_ID IN ('approved','charged_back','refunded') THEN (pay_transaction_dol_amt + pay_shipping_cost_dol_amt) end) AS TPV,
Sum(CASE WHEN PAY_STATUS_ID IN ('charged_back') THEN (pay_transaction_dol_amt + pay_shipping_cost_dol_amt) end) AS CBK,
  CBK/ESTIMADOR CBK_ESTIMADO,

Sum(CASE WHEN pay_status_id IN ('rejected') THEN (pay_transaction_dol_amt + pay_shipping_cost_dol_amt) end) AS RECHAZOS,
Sum(CASE WHEN pay_status_id IN ('rejected') AND pay_status_detail_code NOT LIKE '%high_risk%' THEN (pay_transaction_dol_amt + pay_shipping_cost_dol_amt) end) AS RECHAZOS_BANCARIOS,
Sum(CASE WHEN pay_status_id IN ('rejected') AND pay_status_detail_code  LIKE '%high_risk%' THEN (pay_transaction_dol_amt + pay_shipping_cost_dol_amt) end) AS RECHAZOS_MP,
Count(DISTINCT pay_payment_id) AS INCOMING_QTY,
Sum(CASE WHEN (PAY_STATUS_ID IN ('approved','charged_back','refunded')) OR(pay_status_detail_code NOT LIKE '%high_risk%' )  THEN  1 ELSE 0 end) AS INCOMING_banco_qty,
Sum( CASE WHEN PAY_STATUS_ID IN ('approved','charged_back','refunded') THEN  1 ELSE 0 end) AS TPV_QTY,
Sum( CASE WHEN PAY_STATUS_ID IN ('charged_back') THEN  1 ELSE 0 end) AS CBK_QTY,

Sum( CASE WHEN pay_status_id IN ('rejected') THEN  1 ELSE 0 end) AS RECHAZOS_QTY,
Sum( CASE WHEN pay_status_id IN ('rejected') AND pay_status_detail_code NOT LIKE '%high_risk%' THEN  1 ELSE 0 end) AS RECHAZOS_BANCARIOS_QTY,
Sum( CASE WHEN pay_status_id IN ('rejected') AND pay_status_detail_code  LIKE '%high_risk%' THEN 1 ELSE 0 end) AS RECHAZOS_MP_QTY,
Sum(cbk_pred_final) AS cbk_beta

FROM scoring.reportes_point
WHERE pay_created_dt>= (Current_Date-60)

  GROUP BY 1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29

)WITH DATA PRIMARY INDEX(
pay_created_dt,
pay_try_last,
 sit_site_id,
PAY_CCD_ACQUIRER_ID,
alimentar,
 chip_swipe,
 chip_pin,
 MCC,
 so,
 TIPO_TRANSACCION,
 PAY_PM_DESC,
ASP_USD,
point_device_type,
channel,
estimador,
 pay_ccd_installments_qty,
pay_ccd_first_six_digits);



